// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestrurantPG.Data;

#nullable disable

namespace RestrurantPG.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250826134539_newSuperAdmin")]
    partial class newSuperAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestrurantPG.Models.Admin", b =>
                {
                    b.Property<int>("Admin_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Admin_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Admin_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Admin_Id = 1,
                            Email = "Parman.gitijah@yahoo.com",
                            PasswordHash = "$2a$11$VA0.5ZyTnOGfuSBhoJjYyO0FBlZpE8T8d5GN0QORxl4vJSVBci1ke",
                            Role = "SuperAdmin",
                            UserName = "ParGit99"
                        });
                });

            modelBuilder.Entity("RestrurantPG.Models.AdminInvite", b =>
                {
                    b.Property<int>("AdminInvite_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminInvite_Id"));

                    b.Property<int>("AdminId_Fk")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InviteCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.HasKey("AdminInvite_Id");

                    b.HasIndex("AdminId_Fk");

                    b.HasIndex("InviteCode")
                        .IsUnique();

                    b.ToTable("AdminInvites");
                });

            modelBuilder.Entity("RestrurantPG.Models.Booking", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"));

                    b.Property<DateTime>("BookingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId_Fk")
                        .HasColumnType("int");

                    b.Property<int>("Guest_Id")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("TableId_Fk")
                        .HasColumnType("int");

                    b.Property<int>("Table_Id")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.HasIndex("GuestId_Fk");

                    b.HasIndex("Guest_Id");

                    b.HasIndex("Table_Id");

                    b.HasIndex("TableId_Fk", "BookingStart");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("RestrurantPG.Models.Dish", b =>
                {
                    b.Property<int>("Dish_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dish_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Dish_Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("RestrurantPG.Models.Guest", b =>
                {
                    b.Property<int>("Guest_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Guest_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Guest_Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("RestrurantPG.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"));

                    b.Property<int>("BookingId_Fk")
                        .HasColumnType("int");

                    b.Property<int>("Booking_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Order_Id");

                    b.HasIndex("BookingId_Fk");

                    b.HasIndex("Booking_Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RestrurantPG.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItem_Id"));

                    b.Property<int>("DishId_Fk")
                        .HasColumnType("int");

                    b.Property<int>("Dish_Id")
                        .HasColumnType("int");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("OrderId_Fk")
                        .HasColumnType("int");

                    b.Property<int>("Order_Id")
                        .HasColumnType("int");

                    b.HasKey("OrderItem_Id");

                    b.HasIndex("DishId_Fk");

                    b.HasIndex("Dish_Id");

                    b.HasIndex("OrderId_Fk");

                    b.HasIndex("Order_Id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("RestrurantPG.Models.Table", b =>
                {
                    b.Property<int>("Table_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Table_Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RestrurantPG.Models.AdminInvite", b =>
                {
                    b.HasOne("RestrurantPG.Models.Admin", "CreatedByAdmin")
                        .WithMany("CreatedInvites")
                        .HasForeignKey("AdminId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByAdmin");
                });

            modelBuilder.Entity("RestrurantPG.Models.Booking", b =>
                {
                    b.HasOne("RestrurantPG.Models.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("Guest_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Table", null)
                        .WithMany()
                        .HasForeignKey("TableId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("Table_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestrurantPG.Models.Order", b =>
                {
                    b.HasOne("RestrurantPG.Models.Booking", null)
                        .WithMany()
                        .HasForeignKey("BookingId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("Booking_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("RestrurantPG.Models.OrderItem", b =>
                {
                    b.HasOne("RestrurantPG.Models.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("Dish_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId_Fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestrurantPG.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestrurantPG.Models.Admin", b =>
                {
                    b.Navigation("CreatedInvites");
                });
#pragma warning restore 612, 618
        }
    }
}
